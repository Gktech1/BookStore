version: '3.4'

services:
  productdb:
    container_name: productdb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
  
  cartdb:
    container_name: cartdb
    restart: always
    ports:
      - "6379:6379"

  orderdb:
    container_name: orderdb
    environment:
       - POSTGRES_USER=admin
       - POSTGRES_PASSWORD=admin1234
       - POSTGRES_DB=OrderDb
    restart: always
    ports:
        - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  pgadmin:
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@aspnetrun.com
      - PGADMIN_DEFAULT_PASSWORD=admin1234
    restart: always
    ports:
        - "5050:80"
    volumes:
      - pgadmin_data:/root/.pgadmin

  product.api:
    container_name: product.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings:ConnectionString=mongodb://productdb:27017"
    depends_on:
      - productdb
    ports:
      - "8007:80"

  cart.api:
    container_name: cart.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "CacheSettings:ConnectionString=cartdb:6379"
      - "EventBusSettings:HostAddress=amqp://guest:guest@rabbitmq:5672"
    depends_on:
      - cartdb
      - rabbitmq
    ports:
      - "8008:80"
 
  portainer:
    container_name: portainer
    restart: always
    ports:
      - "8080:8000"
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
  
  rabbitmq:
    container_name: rabbitmq
    restart: always
    ports:
        - "5672:5672"
        - "15672:15672"
    

  order.api:
    container_name: order.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings:OrderingConnectionString=Server=orderdb;Port=5432;Database=OrderDb;User Id=admin;Password=admin1234;"  
      - "EventBusSettings:HostAddress=amqp://guest:guest@rabbitmq:5672"
    depends_on:
        - orderdb
        - rabbitmq
    ports:
      - "8009:80"
   
